rm(list = ls())

library(shiny)
library(tidyverse)
library(lubridate)
library(plotly)
library(bslib)
library(shinyWidgets)
library(shinydashboard)
library(shinythemes)

data <- read.csv("/Volumes/DRAKE STUFF/School/College/Freshman Year/Stat 040/Class_Data/netflix_titles.csv")


# making the date column standard
data2 <- data %>% mutate(date_added=mdy(date_added))

# Separating year from date
year <- format(data2$date_added, "%Y")

# data for the linegraph of first tab

lineplotdata <- data2 %>% mutate(year = year) %>%  count(type, year, name = "Number_of_Shows")



########### Data to find which part of the year produces most shows #########
mnths <- lubridate::month(data2$date_added) 

datawithmonth <- data2 %>% mutate(month = mnths) %>% 
  count(month, name= "Number_of_Shows") %>% 
  drop_na() %>% 
  mutate(month_name = month.abb, month = factor(month, labels = month.abb))

country_names <- data2 %>% separate_rows(country, sep = ", ") %>% 
  select(country) %>% 
  drop_na()%>% 
  unique()


data6 <-  data2 %>% group_by(director) %>%  summarise(n = n()) %>%  arrange(desc(n)) %>% head(30)


# Define UI for application 
ui <- navbarPage(
  
  # Application title
  title = "Netflix Dashboard",
  
  #theme = bslib::bs_theme(bootswatch = "cyborg"),
  #theme = shinytheme("united"),
  
  theme = bs_theme(
    bg = "white", 
    fg = "black",
    primary = "#0077b6",
    secondary = "#d90429",
    
    base_font = font_google("Prompt"),
    code_font = font_google("JetBrains Mono")),
  
  
  
  ##################################################
  tabPanel("First tab",
           
           sidebarLayout(
             sidebarPanel( plotlyOutput("monthbar")
             ),
             
             mainPanel(
               fluidRow(
                 selectInput("country", "Country", choices = as.list((c("All",country_names$country))), width = "40%"),
                 
                 plotlyOutput("linegraph1", width = "100%")
                 
               )
             )
           )
           
           
           
  )
)
  
  server <- function(input, output) {
    
    thematic::thematic_shiny()
    
##First Tab##
##Barplot##
    
    output$monthbar <- renderPlotly({
      
      
      p <-  ggplot(datawithmonth, aes(x= month, y= Number_of_Shows)) +
        geom_bar(aes(fill= month_name), stat= "identity", size = 2)+
        coord_flip()+
        theme_minimal()+
        labs(title = "Number of Shows by Month", x= "Month", y = "")+
        theme(panel.grid = element_blank(),
              plot.title = element_text(hjust = 0.5), 
              panel.background = element_rect(fill="black"), 
              plot.background = element_rect(fill= "black"), 
              axis.text.x = element_text(size = 12, face = "bold", colour = "#B19CD9"),
              text = element_text(colour="white", size =15) )
      
      ggplotly(p)  
      
    })
    
##Line Graph##
    
    output$linegraph1 <- renderPlotly({
      
      if(input$country == "All"){
        
        
        p <- ggplot(lineplotdata, aes(x = year, group =  type, y = Number_of_Shows, color = type)) +
          geom_line(size = 1) +
          geom_point(size = 3)+
          labs(title ="Number of Movies Produced all over the World", x = "Year", color = "type") +
          theme_minimal()+
          theme(panel.grid = element_blank(),
                plot.title = element_text(hjust = 0.5), 
                panel.background = element_rect(fill="black"), 
                plot.background = element_rect(fill= "black"), 
                axis.text.x = element_text(size = 12, face = "bold", colour = "#B19CD9"),
                text = element_text(colour="white", size =15)) 
        ggplotly(p)}
      
      
      else
        
        
      {
        
        data5 <- data2 %>% separate_rows(country, sep= ", ") %>% group_by(country) %>% filter(country == input$country)
        year <- format(data5$date_added, "%Y")
        lineplotdata <- data5 %>% mutate(year = year) %>%  count(type, year, name = "Number_of_Shows")
        
        
        p <- ggplot(lineplotdata, aes(x = year, group =  type, y = Number_of_Shows, color = type)) +
          geom_line(size = 1) +
          geom_point(size = 3)+
          labs(x = "Year", y = "Amount of movies produced",  color = "type") +
          theme_minimal()+
          labs(title =paste("Number of Movies Produced in ", input$country), x = "Year", color = "type") +
          theme_minimal()+
          theme(panel.grid = element_blank(),
                plot.title = element_text(hjust = 0.5), 
                panel.background = element_rect(fill="black"), 
                plot.background = element_rect(fill= "black"), 
                axis.text.x = element_text(size = 12, face = "bold", colour = "#B19CD9"),
                text = element_text(colour="white", size =15)) 
        ggplotly(p)
        
      }
    })
  }


shinyApp(ui = ui, server = server)

